{"ast":null,"code":"import _slicedToArray from \"/workspace/hackernews_by_road2react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/workspace/hackernews_by_road2react/src/SimpleTable.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport TableFooter from '@material-ui/core/TableFooter';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      //     width: '100%',\n      width: 'auto',\n      display: 'table',\n      marginTop: theme.spacing(3) //     overflowX: 'auto',\n\n    },\n    table: {\n      minWidth: 650\n    },\n    head: {\n      backgroundColor: \"lightgrey\",\n      position: \"sticky\",\n      top: \"0px\",\n      zIndex: '10'\n    },\n    button: {}\n  };\n});\n\nfunction SimpleTable(_ref) {\n  var list = _ref.list,\n      onDismiss = _ref.onDismiss,\n      onUpdate = _ref.onUpdate,\n      onLengthUpdate = _ref.onLengthUpdate,\n      enablePagination = _ref.enablePagination,\n      onAdditionSubmit = _ref.onAdditionSubmit;\n  var classes = useStyles();\n  console.log(\"SimpleTable renders:\");\n  console.log(list);\n\n  function displayLabel(props) {\n    return \"hell\\xF3 \".concat(list.adat.length, \" lines of total \").concat(list.nbHits);\n  }\n\n  function TablePaginationActions(props) {\n    var classes = useStyles1();\n    var theme = useTheme();\n    var page = props.page,\n        hitsPerPage = props.hitsPerPage;\n    console.log(\"function TablePaginationActions\");\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: onAdditionSubmit,\n      disabled: !enablePagination,\n      \"aria-label\": \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(KeyboardArrowDown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  };\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    key: \"-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, list.headerRow.map(function (field, index) {\n    return React.createElement(TableCell, {\n      key: \"headerCell\" + index,\n      className: classes.head,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, field);\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, list.adat.map(function (row, indexx) {\n    return React.createElement(TableRow, {\n      key: row.objectID,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: row.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \", indexx + \" \" + row.title, \" \"), \" \"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, row.author), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, row.num_comments), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, row.points), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return onDismiss(row.objectID);\n      },\n      className: \"\",\n      key: row.objectID + \"button1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Dismiss\")), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return onUpdate(row.objectID);\n      },\n      className: \"\",\n      key: row.objectID + \"button2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Peti\")));\n  })), React.createElement(TableFooter, {\n    key: \"-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    key: \"-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(MyTablePagination, {\n    rowsPerPageOptions: [10, 20, 40, 80],\n    downLoadLength: list.downLoadLength,\n    labelRowsPerPage: \"Download Length\",\n    count: list.nbHits,\n    page: 0,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'Hits per page'\n      },\n      native: true\n    },\n    ActionsComponent: TablePaginationActions,\n    labelDisplayedRows: displayLabel,\n    onLengthUpdate: onLengthUpdate,\n    enablePagination: list.adat.length < list.nbHits,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })))));\n}\n\nexport default SimpleTable;\n/**\r\n * pagination function\r\n */\n\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: theme.spacing(2.5),\n      textAlign: \"center\"\n    }\n  };\n});\n\nfunction paginationLabel(props) {\n  console.log(\"PaginationLabel func\");\n  console.log(props);\n  return \"\".concat(props.to, \" lines of total \").concat(props.count);\n}\n\nfunction MyTablePagination(props) {\n  var _useState = useState(props.downLoadLength),\n      _useState2 = _slicedToArray(_useState, 2),\n      downLoadLength = _useState2[0],\n      setDownLoadLength = _useState2[1];\n  /**\r\n   * required function per propTypes\r\n   * custom log can be added\r\n   */\n\n\n  function handleChangePage(event, pageNum) {}\n\n  function handleChangeRowsPerPage(event) {\n    props.onLengthUpdate(event.target.value);\n    setDownLoadLength(parseInt(event.target.value, 10));\n  }\n\n  return React.createElement(TablePagination, {\n    rowsPerPageOptions: props.rowsPerPageOptions,\n    rowsPerPage: downLoadLength,\n    labelRowsPerPage: props.labelRowsPerPage,\n    count: props.count,\n    page: 0,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'Hits per page'\n      },\n      native: true\n    },\n    ActionsComponent: props.ActionsComponent,\n    labelDisplayedRows: props.labelDisplayedRows,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    onChangePage: handleChangePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/workspace/hackernews_by_road2react/src/SimpleTable.js"],"names":["React","useState","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","IconButton","TablePagination","KeyboardArrowDown","TableFooter","useStyles","theme","root","width","display","marginTop","spacing","table","minWidth","head","backgroundColor","position","top","zIndex","button","SimpleTable","list","onDismiss","onUpdate","onLengthUpdate","enablePagination","onAdditionSubmit","classes","console","log","displayLabel","props","adat","length","nbHits","TablePaginationActions","useStyles1","page","hitsPerPage","propTypes","count","number","isRequired","rowsPerPage","headerRow","map","field","index","row","indexx","objectID","url","title","author","num_comments","points","downLoadLength","inputProps","native","flexShrink","color","palette","text","secondary","marginLeft","textAlign","paginationLabel","to","MyTablePagination","setDownLoadLength","handleChangePage","event","pageNum","handleChangeRowsPerPage","target","value","parseInt","rowsPerPageOptions","labelRowsPerPage","ActionsComponent","labelDisplayedRows"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n //     width: '100%',\r\n      width: 'auto', \r\n      display: 'table',\r\n      marginTop: theme.spacing(3),\r\n //     overflowX: 'auto',\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    head: {\r\n      backgroundColor: \"lightgrey\",\r\n      position: \"sticky\",\r\n      top: \"0px\",\r\n      zIndex: '10',\r\n    },\r\n    button: {\r\n    },\r\n  })\r\n);\r\n\r\nfunction SimpleTable({list, onDismiss, onUpdate, onLengthUpdate, enablePagination, onAdditionSubmit}) {\r\n    const classes = useStyles();\r\n    console.log(\"SimpleTable renders:\");\r\n    console.log(list);\r\n\r\n    function displayLabel(props) {\r\n      return (\r\n        `helló ${list.adat.length} lines of total ${list.nbHits}`\r\n      );\r\n    }\r\n\r\n    function TablePaginationActions(props) {\r\n      const classes = useStyles1();\r\n      const theme = useTheme();\r\n      const { page, hitsPerPage } = props;\r\n      console.log(\"function TablePaginationActions\");\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          <IconButton onClick = {onAdditionSubmit} disabled={!enablePagination}\r\n            aria-label=\"Next\"\r\n          >\r\n            <KeyboardArrowDown />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    TablePaginationActions.propTypes = {\r\n      count: PropTypes.number.isRequired,\r\n      page: PropTypes.number.isRequired,\r\n      rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    return (\r\n       <Paper className={classes.root}>\r\n            <Table className = {classes.table}>\r\n                <TableHead>\r\n                    <TableRow key=\"-1\">\r\n                        {list.headerRow.map( (field, index) => (\r\n                            <TableCell key={\"headerCell\" + index} className={classes.head}>{field}</TableCell>\r\n                        ))}\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    \r\n                    {list.adat.map((row, indexx) => (\r\n                        <TableRow key={row.objectID} hover>\r\n                            <TableCell><a href={row.url}> {indexx + \" \" + row.title} </a> </TableCell>\r\n                            <TableCell>{row.author}</TableCell>\r\n                            <TableCell>{row.num_comments}</TableCell>\r\n                            <TableCell>{row.points}</TableCell>\r\n                            <TableCell>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"primary\" \r\n                                    onClick={() => onDismiss(row.objectID)}\r\n                                    className = ''\r\n                                    key = {row.objectID + \"button1\"}>\r\n                                    Dismiss\r\n                                </Button>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"primary\" \r\n                                    onClick={() => onUpdate(row.objectID)}\r\n                                    className = ''\r\n                                    key = {row.objectID + \"button2\"}>\r\n                                    Peti\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                <TableFooter key=\"-3\">\r\n                  <TableRow key= \"-2\">\r\n                    \r\n                       <MyTablePagination\r\n                          rowsPerPageOptions={[10, 20, 40, 80]}\r\n                          downLoadLength={list.downLoadLength}\r\n                          labelRowsPerPage = 'Download Length'\r\n                          count={list.nbHits}\r\n                          page={0}\r\n                          SelectProps={{\r\n                            inputProps: { 'aria-label': 'Hits per page' },\r\n                            native: true,\r\n                            }}\r\n                          ActionsComponent={TablePaginationActions}\r\n                          labelDisplayedRows = {displayLabel}\r\n                          onLengthUpdate = {onLengthUpdate}\r\n                          enablePagination = {list.adat.length < list.nbHits}\r\n                        />\r\n                    </TableRow>\r\n                 </TableFooter>\r\n            \r\n          </Table>\r\n        </Paper>\r\n       \r\n    );\r\n}\r\n\r\nexport default SimpleTable;\r\n\r\n/**\r\n * pagination function\r\n */\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nfunction paginationLabel(props) {\r\n  console.log(\"PaginationLabel func\");\r\n  console.log(props)\r\n  return(\r\n    `${props.to} lines of total ${props.count}`\r\n  )\r\n} \r\n\r\nfunction MyTablePagination(props) {\r\n  const [downLoadLength, setDownLoadLength] = useState(props.downLoadLength);\r\n  \r\n  /**\r\n   * required function per propTypes\r\n   * custom log can be added\r\n   */\r\n  function handleChangePage(event, pageNum) {   \r\n  }\r\n\r\n  function handleChangeRowsPerPage(event){\r\n    props.onLengthUpdate(event.target.value);\r\n    setDownLoadLength(parseInt(event.target.value,10));\r\n  }\r\n  return (\r\n    <TablePagination\r\n        rowsPerPageOptions={props.rowsPerPageOptions}\r\n        rowsPerPage={downLoadLength}\r\n        labelRowsPerPage = {props.labelRowsPerPage}\r\n        count={props.count}\r\n        page={0}\r\n        SelectProps={{\r\n          inputProps: { 'aria-label': 'Hits per page' },\r\n          native: true,\r\n          }}\r\n        ActionsComponent={props.ActionsComponent}\r\n        labelDisplayedRows = {props.labelDisplayedRows}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        onChangePage={handleChangePage}\r\n      />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}